/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const IFluentEmojiFlatAngryFace: typeof import('~icons/fluent-emoji-flat/angry-face')['default']
  const IFluentEmojiFlatAnxiousFaceWithSweat: typeof import('~icons/fluent-emoji-flat/anxious-face-with-sweat')['default']
  const IFluentEmojiFlatBeamingFaceWithSmilingEyes: typeof import('~icons/fluent-emoji-flat/beaming-face-with-smiling-eyes')['default']
  const IFluentEmojiFlatClownFace: typeof import('~icons/fluent-emoji-flat/clown-face')['default']
  const IFluentEmojiFlatDowncastFaceWithSweat: typeof import('~icons/fluent-emoji-flat/downcast-face-with-sweat')['default']
  const IFluentEmojiFlatExplodingHead: typeof import('~icons/fluent-emoji-flat/exploding-head')['default']
  const IFluentEmojiFlatFaceHoldingBackTears: typeof import('~icons/fluent-emoji-flat/face-holding-back-tears')['default']
  const IFluentEmojiFlatFaceSavoringFood: typeof import('~icons/fluent-emoji-flat/face-savoring-food')['default']
  const IFluentEmojiFlatFaceWithDiagonalMouth: typeof import('~icons/fluent-emoji-flat/face-with-diagonal-mouth')['default']
  const IFluentEmojiFlatFaceWithRaisedEyebrow: typeof import('~icons/fluent-emoji-flat/face-with-raised-eyebrow')['default']
  const IFluentEmojiFlatFaceWithRollingEyes: typeof import('~icons/fluent-emoji-flat/face-with-rolling-eyes')['default']
  const IFluentEmojiFlatFaceWithSymbolsOnMouth: typeof import('~icons/fluent-emoji-flat/face-with-symbols-on-mouth')['default']
  const IFluentEmojiFlatFaceWithTearsOfJoy: typeof import('~icons/fluent-emoji-flat/face-with-tears-of-joy')['default']
  const IFluentEmojiFlatGhost: typeof import('~icons/fluent-emoji-flat/ghost')['default']
  const IFluentEmojiFlatGrinningFaceWithBigEyes: typeof import('~icons/fluent-emoji-flat/grinning-face-with-big-eyes')['default']
  const IFluentEmojiFlatGrinningFaceWithSweat: typeof import('~icons/fluent-emoji-flat/grinning-face-with-sweat')['default']
  const IFluentEmojiFlatGrinningSquintingFace: typeof import('~icons/fluent-emoji-flat/grinning-squinting-face')['default']
  const IFluentEmojiFlatHotFace: typeof import('~icons/fluent-emoji-flat/hot-face')['default']
  const IFluentEmojiFlatKnockedOutFace: typeof import('~icons/fluent-emoji-flat/knocked-out-face')['default']
  const IFluentEmojiFlatLoudlyCryingFace: typeof import('~icons/fluent-emoji-flat/loudly-crying-face')['default']
  const IFluentEmojiFlatLyingFace: typeof import('~icons/fluent-emoji-flat/lying-face')['default']
  const IFluentEmojiFlatPartyingFace: typeof import('~icons/fluent-emoji-flat/partying-face')['default']
  const IFluentEmojiFlatSmilingFaceWithSunglasses: typeof import('~icons/fluent-emoji-flat/smiling-face-with-sunglasses')['default']
  const IFluentEmojiFlatSmirkingFace: typeof import('~icons/fluent-emoji-flat/smirking-face')['default']
  const IFluentEmojiFlatWoozyFace: typeof import('~icons/fluent-emoji-flat/woozy-face')['default']
  const IFluentEmojiFlatZanyFace: typeof import('~icons/fluent-emoji-flat/zany-face')['default']
  const ISolarClipboardBroken: typeof import('~icons/solar/clipboard-broken')['default']
  const ISolarShareLinear: typeof import('~icons/solar/share-linear')['default']
  const NHead: typeof import('next/head')['default']
  const NImage: typeof import('next/image')['default']
  const NLink: typeof import('next/link')['default']
  const NScript: typeof import('next/script')['default']
  const Root: typeof import('./libs/shiki')['Root']
  const attrsToLines: typeof import('./libs/shiki')['attrsToLines']
  const classNames: typeof import('./utils/helper')['classNames']
  const codeToHTML: typeof import('./libs/shiki')['codeToHTML']
  const codeToHTMLWithTransformers: typeof import('./libs/shiki')['codeToHTMLWithTransformers']
  const codeToHast: typeof import('./libs/shiki')['codeToHast']
  const createShikiSingleton: typeof import('./libs/shiki')['createShikiSingleton']
  const getDisplayNameByLanguageID: typeof import('./libs/shiki')['getDisplayNameByLanguageID']
  const getLines: typeof import('./utils/strings')['getLines']
  const getLocalePathname: typeof import('./utils/helper')['getLocalePathname']
  const getShikiAllSupportedLanguages: typeof import('./libs/shiki')['getShikiAllSupportedLanguages']
  const getShikiSingleton: typeof import('./libs/shiki')['getShikiSingleton']
  const parseURLParams: typeof import('./utils/middlewares')['parseURLParams']
  const trimChars: typeof import('./utils/strings')['trimChars']
  const trimCharsLeft: typeof import('./utils/strings')['trimCharsLeft']
  const trimCharsRight: typeof import('./utils/strings')['trimCharsRight']
  const useSWR: typeof import('swr')['default']
  const useToastFeedback: typeof import('./hooks/toast')['useToastFeedback']
}
